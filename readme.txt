Описание обработчиков

    Пользователь

        Функционал на клиенте
            
            mux.HandleFunc("/", h.startPage)                           // Стартовая страница (метод GET)
                Отдаем стартовую страницу. 
                    Поведение пользователя: на стартовой странице
                    к выбору распологается 4 формы характеризующие линии форумов. Рабочий 
                    форум D3. При нажатии пользователем на форму D3 должен передаваться запрос 
                    на сервер по url: /userd3 методом GET 
            
        Функционал на сервере
            
            mux.HandleFunc("/userd3", h.homePage)                      // Главная страница пользователя (метод GET)
                Главная страница содержит все посты форума.
                Получив запрос от клиента отдаем данные в формате JSON.
               
                Формат ответа JSON: 
                    [
                    {
                        "post_id": 1,
                        "user_id": 3,
                        "category_name": "Cтанции",
                        "title": "Станция Люберцы",
                        "discription": "Строительство путепровода на 33 км",
                        "create_at": "2024-03-27T12:57:12.619943552+06:00"
                    },
                    {
                        "post_id": 2,
                        "user_id": 3,
                        "category_name": "Подвижной состав",
                        "title": "Электропоезд ЭД4м",
                        "discription": "Новые поезда",
                        "create_at": "2024-03-27T12:39:03.953320024+06:00"
                    }
                    ]

	        mux.HandleFunc("/register", h.Register)                    // Страница регистрации (метод POST)
                Пользователь на главной странице нажимает на кнопку "Регистрация" и получает
                страницу регистрации с полями для ввода: "Имя", "Почта" и "Пароль"
                после ввода данных нажимает на кнопку "Зарегестрироваться" и отправляет на сервер POST запрос 
                в формате JSON.
                
                Формат запроса JSON:
                    {
                        "name":"Leonid",
                        "email":"leonid@gmail.com",
                        "password":"1111"
                    }
               
                Cервер после успешной записи данных в БД отправляет ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":200 
                    }

                В случае ошибки сервер возвращает ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":400 
                    }

	        mux.HandleFunc("/login", h.Login)                          // Страница для входа (метод POST)
                Пользователь после успешной регистрации перенаправляется на страницу входа
                и после ввода данных почты и пароля отправляет на сервер POST запрос в формате JSON.
                
                Формат запроса JSON:
                {
                    "email":"saken@gmail.com",
                    "password":"1111"
                }

                Сервер после успешной сверки данных с данными БД отправляет ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756"
                    }
                
                В случае ошибки сервер возвращает ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":400 
                    }
                
    Посты

	    Функционал на сервере
            
            mux.HandleFunc("/userd3/likeposts", h.likePosts)           // Cтраница понравившихся тем пользователем (метод GET)
                Пользователь на главной странице нажимает кнопку "Понравившиеся посты" и отправляет GET запрос на сервер. 
                Сервер отправляет ответ ввиде JSON. 
                
                Формат ответа JSON: 
                    [
                    {
                        "post_id": 1,
                        "user_id": 3,
                        "category_name": "Cтанции",
                        "title": "Станция Люберцы",
                        "discription": "Строительство путепровода на 33 км",
                        "create_at": "2024-03-27T12:57:12.619943552+06:00"
                    },
                    {
                        "post_id": 2,
                        "user_id": 3,
                        "category_name": "Подвижной состав",
                        "title": "Электропоезд ЭД4м",
                        "discription": "Новые поезда",
                        "create_at": "2024-03-27T12:39:03.953320024+06:00"
                    }
                    ]

                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

	        mux.HandleFunc("/userd3/myposts", h.myPosts)               // Страница созданных пользователем тем (постов) (метод GET)
                Пользователь на главной странице нажимает кнопку "Мои посты" и отправляет GET запрос на сервер. 
                Сервер отправляет ответ ввиде JSON. 
                
                Формат ответа JSON: 
                    [
                    {
                        "post_id": 1,
                        "user_id": 3,
                        "category_name": "Cтанции",
                        "title": "Станция Люберцы",
                        "discription": "Строительство путепровода на 33 км",
                        "create_at": "2024-03-27T12:57:12.619943552+06:00"
                    },
                    {
                        "post_id": 2,
                        "user_id": 3,
                        "category_name": "Подвижной состав",
                        "title": "Электропоезд ЭД4м",
                        "discription": "Новые поезда",
                        "create_at": "2024-03-27T12:39:03.953320024+06:00"
                    }
                    ]

                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

	        mux.HandleFunc("/userd3/posts", h.createPosts)             // Cтраница создания новой темы (поста) (методы GET и POST)
                Пользователь на главной странице нажимает на кнопку "Создать тему", после чего загружается страница
                с полями "Тема", "Описание" и кнопкой "Опубликовать", при нажатии на кнопку "Опубликовать" 
                на сервер отправляется POST запрос в формате JSON.

                Формат запроса JSON:
                {
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756", 
                    "category_name":"Станции",
                    "title":"Станция Люберцы",
                    "discription":"Новые поезда"
                }

                Сервер после успешного создания поста и записи в БД отправляет ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

            mux.HandleFunc("/userd3/post/", h.getPost)                 // Получение страницы с конкретной темой по id (метод GET)
                Пользователь при нажатии на пост отправляет POST запрос на сервер в формате JSON.
                
                Формат запроса JSON:
                {
                    "post_id":"1"
                }
                
                При успешном выполнении запроса сервер отвечает в формате JSON.

                Формат ответа JSON:

                {
                    "post_id": 1,
                    "user_id": 3, 
                    "category_name": "Cтанции",
                    "title": "Станция Люберцы",
                    "discription": "Строительство путепровода на 33 км",
                    "create_at": "2024-03-27T12:57:12.619943552+06:00"
                }

                При неуспешном выполнении запроса сервер отвечает в формате JSON.

                Формат ответа JSON:
                    {
                        "status":400
                    }

             mux.HandleFunc("/userd3/mypost/", h.updatePost)            // Изменение и удаление поста (методы PUT и DELETE)
                Пользователь при нажатии кнопки "Изменить пост" имеет право изменить его описание. При нажатии на эту кнопку открывается 
                страница его редактирования и после изменения описания пользователь нажимает на кнопку "Изменить". 
                После нажатия на кнопку "Изменить" отправляется PUT запрос на сервер в формате JSON.

                Формат запроса JSON:
                {
                    "post_id":1,
                    "discription":"Замена моста",
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756"
                }

                Сервер после успешного изменения поста и записи в БД отправляет ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

                Пользователь при нажатии кнопки "Удалить пост" отправляет DELETE запрос на сервер в формате JSON.
                
                Формат запроса JSON:
                {
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756",
                    "post_id":1,
                }

                Сервер после успешного удаления поста и записи в БД отправляет ответ в формате JSON.
                
                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

            mux.HandleFunc("/userd3/post/vote", h.votePost)            // Проставление лайка или дизлайка на пост (метод POST)
                Пользователь при нажатии на лайк или дизлайк поста отправляет POST запрос на сервер в формате JSON:

                Формат запроса JSON:
                {
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756",
                    "post_id":1,
                    "vote":1
                }

                Сервер после успешного проставления голоса и записи в БД отправляет ответ в формате JSON.

                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

    Комментарии
	
            mux.HandleFunc("/userd3/commentsCreate", h.CreateComment)  // Создание комментария (метод POST)
                Пользователь вводит комментарий под постом и нажимает кнопку "Отправить". При нажатии на кнопку "Отправить"
                отправляется POST запрос на сервер в формате JSON.

                Формат запроса JSON:
                {
                    "comment_id":1,
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756",
                    "post_id":1,
                    "discription":"Когда запустят ноые поезда?"
                }

                Сервер после успешной записи комментария в БД отправляет ответ в формате JSON.

                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

	        mux.HandleFunc("/userd3/commentsDelete", h.DeleteComment)   // Удаление комменатрия (метод DELETE)
                Пользователь нажимает на кнопку "Удалить комментарий" и отправляет DELETE запрос на сервер в формате JSON.

                Формат запроса JSON:
                {
                    "comment_id":1,
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756",
                    "post_id":1
                }

                Сервер после успешного удаления комментария в БД отправляет ответ в формате JSON.

                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }

        	mux.HandleFunc("/userd3/commentsUpdate", h.UpdateComment)  // Изменение комментария (метод PUT)
                Пользователь нажимает на кнопку "Изменить комментарий" и отправляет PUT запрос на сервер в формате JSON.

                Формат запроса JSON:
                {
                    "comment_id":1,
                    "cookie_uuid":"ad07db8a-a88b-4a31-b37e-49c398886756",
                    "post_id":1
                    "discription":"Когда заменят поезда?"
                }

                Сервер после успешного изменения комментария в БД отправляет ответ в формате JSON.

                Формат ответа JSON:
                    {
                        "status":200
                    }
                
                В случае ошибки формат ответа JSON:
                    {
                        "status":400 
                    }
    
             mux.HandleFunc("/userd3/comment", h.CommentByID) // Получения комментария по id (метод GET)
                Пользователь нажимает на комментарий


	        mux.HandleFunc("/userd3/comments", h.Comments) // Получение всех комментариев к конкретному посту
                Получение всех комменатриев к конкретному посту.

                Формат запроса JSON:
                {
                    "post_id":1
                }

                Формат ответа JSON: 
                    [
                    {
                        "comment_id": 1,
                        "user_id": 3,
                        "post_id": 2,
                        "discription": "Строительство путепровода на 33 км",
                        "create_at": "2024-03-27T12:57:12.619943552+06:00"
                    },
                    {
                        "comment_id": 2,
                        "user_id": 3,
                        "post_id": 2,
                        "discription": "Строительство путепровода на 33 км",
                        "create_at": "2024-03-27T12:57:12.619943552+06:00"
                    },
                    ]